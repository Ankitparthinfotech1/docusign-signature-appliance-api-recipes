#ifndef __SAPIUMENUMS_H__
#define __SAPIUMENUMS_H__

#ifndef SAPIUMCOM

// this enum should be synchronized with the MOB ENUM_USER_TYPE
typedef enum SAPI_UM_ENUM_USER_TYPE{
    SAPI_UM_USER_TYPE_NONE		= 0,
	SAPI_UM_USER_TYPE_USER		= 1,    
    SAPI_UM_USER_TYPE_GROUP		= 2,
    SAPI_UM_USER_TYPE_COMPUTER	= 3
}SAPI_UM_ENUM_USER_TYPE;

// this enum should be synchronized with the MOB ENUM_USER_LOGIN_STATUS
typedef enum SAPI_UM_ENUM_USER_LOGIN_STATUS {
   SAPI_UM_USER_LOGIN_STATUS_NONE=0,
   SAPI_UM_USER_LOGIN_STATUS_ENABLED=1,
   SAPI_UM_USER_LOGIN_STATUS_DISABLED=2
} SAPI_UM_ENUM_USER_LOGIN_STATUS;

typedef enum SAPI_UM_ENUM_CALC_CRED_METHOD{
	SAPI_UM_ENUM_CALC_CRED_METHOD_NONE	= 0
}SAPI_UM_ENUM_CALC_CRED_METHOD;

typedef enum SAPI_UM_ENUM_COUNTER_TYPE{
    SAPI_UM_COUNTER_GENERAL=1,
	SAPI_UM_COUNTER_1=2,
	SAPI_UM_COUNTER_2=3
}SAPI_UM_ENUM_COUNTER_TYPE;

typedef enum SAPI_UM_ENUM_USER_ENROLLMENT_STATUS{
   SAPI_UM_DONT_CARE_USER_ENROLLMENT_STATUS=-1,//for use in filter
   SAPI_UM_NONE_USER_ENROLLMENT_STATUS=0,
   SAPI_UM_NEW_USER_ENROLLMENT_STATUS=1,
   SAPI_UM_RENEW_USER_ENROLLMENT_STATUS=2
}SAPI_UM_ENUM_USER_ENROLLMENT_STATUS;

typedef enum SAPI_UM_ENUM_USER_ENROLLMENT_REASON{
   SAPI_UM_NONE_USER_ENROLLMENT_REASON=0,
   SAPI_UM_CN_CHANGED_USER_ENROLLMENT_REASON=1,
   SAPI_UM_EMAIL_CHANGED_USER_ENROLLMENT_REASON=2,
   SAPI_UM_CERT_EXPIRE_USER_ENROLLMENT_REASON=4,
   SAPI_UM_EMAIL_SENT_USER_ENROLLMENT_REASON=8		// indicates an attempt was made to notify the user about the enrollment status
}SAPI_UM_ENUM_USER_ENROLLMENT_REASON;

typedef enum SAPI_UM_ENUM_USER_CERT_STATUS_TYPE{
    SAPI_UM_USER_CERT_STATUS_NONE=0,
	SAPI_UM_USER_CERT_STATUS_EXIST=1,
	SAPI_UM_USER_CERT_STATUS_NOT_EXIST=2,
}SAPI_UM_ENUM_USER_CERT_STATUS_TYPE;

typedef enum SAPI_UM_ENUM_PENDING_REQUEST_STATUS_TYPE{
    SAPI_UM_PENDING_REQUEST_STATUS_NONE=0,
	SAPI_UM_PENDING_REQUEST_STATUS_SEND_CRQ=1,
	SAPI_UM_PENDING_REQUEST_STATUS_APPROVE=2,
	SAPI_UM_PENDING_REQUEST_STATUS_RETRIEVE_CERT=3,
	SAPI_UM_PENDING_REQUEST_STATUS_REVOKE=4,
	SAPI_UM_PENDING_REQUEST_STATUS_ALL=999
}SAPI_UM_ENUM_PENDING_REQUEST_STATUS_TYPE;

typedef enum SAPI_UM_ENUM_GROUP_STATUS_TYPE {
   SAPI_UM_GROUP_STATUS_NONE=0,
   SAPI_UM_GROUP_STATUS_ENABLED=1,
   SAPI_UM_GROUP_STATUS_DISABLED=2
} SAPI_UM_ENUM_GROUP_STATUS_TYPE;

typedef enum SAPI_UM_ENUM_GROUPS_ORDER_TYPE {
	SAPI_UM_GROUPS_ORDER_NONE=0,
	SAPI_UM_GROUPS_ORDER_NAME=1,
	SAPI_UM_GROUPS_ORDER_ADDRESS=2,
	SAPI_UM_GROUPS_ORDER_STATUS=3
} SAPI_UM_ENUM_GROUPS_ORDER_TYPE;
//MASK
typedef enum SAPI_UM_ENUM_GROUP_PACKAGE {
   SAPI_UM_GROUP_PACKAGE_NONE=0,
   SAPI_UM_GROUP_PACKAGE_1=1,
   SAPI_UM_GROUP_PACKAGE_2=2,
   SAPI_UM_GROUP_PACKAGE_3=4,
   SAPI_UM_GROUP_PACKAGE_4=8,
} SAPI_UM_ENUM_GROUP_PACKAGE;

typedef enum SAPI_UM_ENUM_GROUP_KEY_SIZE {
   SAPI_UM_GROUP_DEFAULT_KEY=0,
   SAPI_UM_GROUP_NO_KEY=1,
   SAPI_UM_GROUP_KEY_1024=128,
   SAPI_UM_GROUP_KEY_2048=256,
   SAPI_UM_GROUP_KEY_3072=384,
   SAPI_UM_GROUP_KEY_4096=512,
} SAPI_UM_ENUM_GROUP_KEY_SIZE;

//MASK
typedef enum SAPI_UM_ENUM_GROUP_FLAGS {
   SAPI_UM_GROUP_FLAGS_NONE=0,
   SAPI_UM_GROUP_FLAGS_ENFORCE_PROMPT_FOR_SIGN=1
} SAPI_UM_ENUM_GROUP_FLAGS;

//should values that feat MASK operations
typedef enum SAPI_UM_ENUM_GROUP_DELETE_USER_OP{
    SAPI_UM_GROUP_DELETE_USER_OP_NONE=0,
    SAPI_UM_GROUP_DELETE_USER_OP_DELETE=1,
    SAPI_UM_GROUP_DELETE_USER_OP_CLEAR_ACCOUNT=2,
    SAPI_UM_GROUP_DELETE_USER_OP_DISABLE=4
}SAPI_UM_ENUM_GROUP_DELETE_USER_OP;

// this enum should be synchronized with the MOB ENUM_USER_INFO_TYPE
typedef enum  SAPI_UM_ENUM_USER_EXT_INFO_TYPE    
{
	SAPI_UM_USER_EXT_INFO_ALL_USER_INFO				= -1, //indicate to delete all user extended info
	SAPI_UM_USER_EXT_INFO_NONE						= 0,
	SAPI_UM_TBD_USER_EXT_INFO_CHOSEN_SEC_CA_PFX		= 1, //system reserved
	SAPI_UM_TBD_USER_EXT_INFO_CHOSEN_SEC_CA_CERT	= 2, //system reserved
	SAPI_UM_USER_EXT_INFO_CLOUD_STORAGE_TOKEN		= 3,
	SAPI_UM_USER_EXT_INFO_USER_SETTINGS				= 4
}SAPI_UM_ENUM_USER_EXT_INFO_TYPE;
// this enum should be synchronized with the MOB ENUM_DATA_TYPE
typedef enum SAPI_UM_ENUM_DATA_TYPE {
	SAPI_UM_ENUM_DATA_TYPE_NONE				= 0,
	SAPI_UM_ENUM_DATA_TYPE_DWORD			= 1,	
	SAPI_UM_ENUM_DATA_TYPE_STR				= 2,
	SAPI_UM_ENUM_DATA_TYPE_WSTR				= 3,
	SAPI_UM_ENUM_DATA_TYPE_TIME				= 4,
	SAPI_UM_ENUM_DATA_TYPE_UCHAR			= 5,
	SAPI_UM_ENUM_DATA_TYPE_FUNC_PTR			= 6,
	SAPI_UM_ENUM_DATA_TYPE_SAPI_FILE_TIME	= 7
}SAPI_UM_ENUM_DATA_TYPE;
//MASK
typedef enum SAPI_UM_ENUM_LOGON_FLAG_TYPE{
    SAPI_UM_LOGON_FLAG_TYPE_WRITE_OP			= 0X00000000,
	SAPI_UM_LOGON_FLAG_TYPE_READONLY_OP			= 0X00000001,
	SAPI_UM_LOGON_FLAG_TYPE_WRITE_NO_CACHE_OP	= 0X00000002,
	SAPI_UM_LOGON_FLAG_TYPE_NO_ADMIN			= 0X00000004,
	SAPI_UM_LOGON_FLAG_AUTH_MODE_SSPI			= 0x00000100,
	SAPI_UM_LOGON_FLAG_AUTH_MODE_VERIFY_USER_SRV_SIDE	= 0x00000200,
	SAPI_UM_LOGON_FLAG_AUTH_MODE_SSPI_USRPWD			= 0x00000400,
	SAPI_UM_LOGON_FLAG_AUTH_MODE_VERIFY_DB_USER_SRV_SIDE = 0x00000800,
	SAPI_UM_LOGON_FLAG_AUTH_MODE_SAML_SRV_SIDE			= 0x00001000,
	SAPI_UM_LOGON_FLAG_AUTH_MODE_JWT_SRV_SIDE			= 0x00002000,
	SAPI_UM_LOGON_FLAG_EXTERNAL_COSIGN_SRV				= 0x20000000,
}SAPI_UM_ENUM_LOGON_FLAG_TYPE;

//MASK
// this enum should be synchronized with the MOB ENUM_ACCOUNT_VALUE_NAME
typedef enum SAPI_UM_ENUM_GROUP_VALUE_NAME {
   SAPI_UM_GROUP_VALUE_NONE					= 0x00000000,
   SAPI_UM_GROUP_VALUE_LICENSE_NUM_OF_USERS	= 0x00000001,
   SAPI_UM_GROUP_VALUE_SAML_ID				= 0x00000002,
   SAPI_UM_GROUP_VALUE_CPS_OID_ID			= 0x00000003,
   SAPI_UM_GROUP_VALUE_CPS_URI_ID			= 0x00000004
} SAPI_UM_ENUM_GROUP_VALUE_NAME;

typedef enum SAPI_UM_USERS_FILTER_EXT_TYPE {
   SAPI_UM_USERS_FILTER_EXT_TYPE_NONE			=	0,
   SAPI_UM_USERS_FILTER_EXT_TYPE_GROUP_TECH_ID	=	1
} SAPI_UM_USERS_FILTER_EXT_TYPE;

typedef enum 
{
	SAPI_ENUM_NON_ID_KIND		 = 0,
	SAPI_ENUM_LOGIN_NAME_ID_KIND = 1,
	SAPI_ENUM_GUID_ID_KIND		 = 2,
	SAPI_ENUM_TECH_ID_KIND		 = 3,
}SAPI_ENUM_USER_ID_KIND;

// The following enum is copied from ENUM_CA_TYPE on mobtypes.h
typedef enum 
{
	SAPI_UM_ENUM_CA_TYPE_NONE                          = 0,
	SAPI_UM_ENUM_OBS_CA_TYPE_ENTERPRISE_ROOT           = 1, //Obsolete
	SAPI_UM_ENUM_OBS_CA_TYPE_ENTERPRISE_SUBORDINATE    = 2, //Obsolete
	SAPI_UM_ENUM_CA_TYPE_STANDALONE_ROOT               = 3,
	SAPI_UM_ENUM_CA_TYPE_STANDALONE_SUBORDINATE        = 4,
	SAPI_UM_ENUM_CA_TYPE_COMODO						= 5,
	SAPI_UM_ENUM_CA_TYPE_CHOSENSEC						= 6,
	SAPI_UM_ENUM_CA_TYPE_SYMANTEC						= 7,	
	SAPI_UM_ENUM_CA_TYPE_LAST							= 7 //the value of this enum is equal to the last valid CA type
											  // install2 makes use of this feature
}SAPI_UM_ENUM_CA_TYPE;

// The following enum is copied from ENUM_CA_ROLE on mobtypes.h
typedef enum 
{
	SAPI_UM_ENUM_CA_ROLE_NONE                          = 0,
	SAPI_UM_ENUM_CA_ROLE_DEFAULT                       = 1,
}SAPI_UM_ENUM_CA_ROLE;

// The following enum is copied from ENUM_CA_STATUS on mobtypes.h
typedef enum {
	SAPI_UM_ENUM_CA_STATUS_UNKNOWN	= 0,	//Obsolete
	SAPI_UM_ENUM_CA_STATUS_STOPPED	= 1,	//Obsolete
	SAPI_UM_ENUM_CA_STATUS_RUNNING	= 2,	//Obsolete
	SAPI_UM_ENUM_CA_STATUS_STARTING	= 3,	//Obsolete
	SAPI_UM_ENUM_CA_STATUS_STOPPING	= 4,	//Obsolete
	SAPI_UM_ENUM_CA_STATUS_NONE = 5,
	SAPI_UM_ENUM_CA_STATUS_CA_PRECHECKS=10,
	SAPI_UM_ENUM_CA_STATUS_CA_KEY_SIZE_RETRIEVED=15,
	SAPI_UM_ENUM_CA_STATUS_ACCOUNT_ACCESSED=20,
	SAPI_UM_ENUM_CA_STATUS_CA_KEY_WAS_GENERATED=25,
	SAPI_UM_ENUM_CA_STATUS_COPY_OLD_CA_CERT_TO_DB=30,
	SAPI_UM_ENUM_CA_STATUS_PUT_CERT_CHAIN_IN_STORE=35,
	SAPI_UM_ENUM_CA_STATUS_CA_CERT_WAS_READ=40,
	SAPI_UM_ENUM_CA_STATUS_CA_CERT_WAS_WRITTEN_TO_DB=45,
	SAPI_UM_ENUM_CA_STATUS_CA_CERT_WAS_GENERATED=50,
	SAPI_UM_ENUM_CA_STATUS_CA_CRQ_WAS_CREATED=55,
	SAPI_UM_ENUM_CA_STATUS_CRL_PUBLISH_CHANGE=60,
	SAPI_UM_ENUM_CA_STATUS_PUBLISH_CA_CERT=65,
    SAPI_UM_ENUM_CA_STATUS_WAIT_FOR_CRP=70,
	SAPI_UM_ENUM_CA_STATUS_WAIT_FOR_CA_PFX=75,
    SAPI_UM_ENUM_CA_STATUS_INSTALLED_SUCCESSFULY=80,
	SAPI_UM_ENUM_CA_STATUS_CA_DISABLED = 85
}SAPI_UM_ENUM_CA_STATUS;

#endif

#endif
